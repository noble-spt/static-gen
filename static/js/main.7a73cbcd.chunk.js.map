{"version":3,"sources":["components/PrimaryAppBar.js","components/Comments.js","utils/Api.js","components/MarkdownMembrane.js","App.js","Home.js","router/Routes.js","serviceWorker.js","index.js","posts/app-menu/Now.md","posts/app-menu/Categories.md","posts/app-menu/Tags.md","posts/archive/Archive.md","posts/home/home.md","posts/test1/test1.md"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","buttons","textTransform","fontFamily","fontWeight","backgroundColor","PrimaryAppBar","classes","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","createMuiTheme","props","MuiButtonBase","disableRipple","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","className","component","Link","to","Typography","AppBar","position","style","boxShadow","Toolbar","Button","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","comment","inline","lowText","fontSize","Comments","undefined","gitIssue","Box","flexDirection","p","Avatar","src","commentData","ImgSrc","userName","createdDateTime","target","rel","href","commentUrl","axios","create","baseURL","responseType","markdownText","paddingLeft","paddingRight","paddingBottom","MarkdownMembrane","input","setInput","useEffect","fetch","markDownFilePath","then","response","text","divRef","useRef","maxWidth","myRef","getWidth","useCallback","current","offsetWidth","width","setWidth","handleResize","window","addEventListener","removeEventListener","useResize","renderers","image","alt","ref","source","App","state","markDownContent","commentsData","this","updateCommentsState","Api","get","getCommentApiUrl","setState","data","map","createCommentData","commentDetails","body","user","avatar_url","html_url","login","created_at","contentFilePath","gitIssueUrl","getGitIssueUrl","Grid","container","justify","root","item","xs","sm","commentHeader","variant","commentDataObject","gitIssueBaseUrl_keepWaiting","gitIssueBaseUrl","includes","concat","Component","withStyles","paper","padding","control","margin","link","homeFilePath","RoutesList","AppRouter","exact","path","render","Home","key","archive","now","categories","tags","test1","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7a73cbcd.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  buttons: {\n    textTransform: 'none',\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n        + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n        + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n        + ' \\'Helvetica Neue\\', sans-serif',\n    fontWeight: 600,\n    \"&:hover\": {\n      backgroundColor: \"#fffffc\"\n    }\n  }\n}));\n\nexport default function PrimaryAppBar() {\n  const classes = useStyles();\n  const [setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const theme = createMuiTheme({\n    props: {\n      MuiButtonBase: {\n        disableRipple: true\n      }\n    }\n  });\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n      <Menu\n          anchorEl={mobileMoreAnchorEl}\n          anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n          id={mobileMenuId}\n          keepMounted\n          transformOrigin={{vertical: 'top', horizontal: 'right'}}\n          open={isMobileMenuOpen}\n          onClose={handleMobileMenuClose}>\n        <MenuItem className={classes.buttons}\n                  component={Link}\n                  to=\"/\">\n          <Typography>⌂ Home</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}\n                  component={Link}\n                  to=\"/now\">\n          <Typography>⍥ /now</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}\n                  component={Link}\n                  to=\"/categories\">\n          <Typography>≔ Categories</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}\n                  component={Link}\n                  to=\"/tags\">\n          <Typography>〆 Tags</Typography>\n        </MenuItem>\n      </Menu>\n  );\n\n  return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.grow}>\n          <AppBar position=\"static\" color={'transparent'}\n                  style={{boxShadow: 'none'}}>\n            <Toolbar>\n              <div className={classes.grow}/>\n              <div className={classes.sectionDesktop}>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\"\n                        component={Link}\n                        to=\"/\">\n                  <Typography>⌂ Home</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        edge=\"end\"\n                        aria-label=\"account of current user\"\n                        aria-controls={menuId}\n                        aria-haspopup=\"true\"\n                        color=\"inherit\"\n                        component={Link}\n                        to=\"/now\"\n                >\n                  <Typography>⍥ /now</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\"\n                        component={Link}\n                        to=\"/categories\">\n                  <Typography>≔ Categories</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\"\n                        component={Link}\n                        to=\"/tags\">\n                  <Typography>〆 Tags</Typography>\n                </Button>\n              </div>\n              <div className={classes.sectionMobile}>\n                <Button className={classes.buttons}\n                        aria-label=\"show more\"\n                        aria-controls={mobileMenuId}\n                        aria-haspopup=\"true\"\n                        onClick={handleMobileMenuOpen}\n                        color=\"inherit\"\n                >\n                  <Typography>〚〄〛</Typography>\n                </Button>\n              </div>\n            </Toolbar>\n          </AppBar>\n          {renderMobileMenu}\n          {/*{renderMenu}*/}\n        </div>\n      </MuiThemeProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  comment: {\n    color: '#505050',\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n      + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n      + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n      + ' \\'Helvetica Neue\\', sans-serif',\n  },\n  inline: {\n    color: '#204060',\n    flexGrow: 1,\n    display: 'inline',\n    marginRight: 10,\n  },\n  lowText: {\n    flexGrow: 1,\n    display: 'inline',\n    marginRight: 10,\n    color: '#808080',\n    fontSize: 12\n  }\n}));\n\nexport default function Comments(props) {\n  const classes = useStyles();\n  if(props.gitIssue !== undefined){\n  return (\n    <div>\n      <Box display=\"flex\" flexDirection=\"row\" p={1}>\n        <Box p={1}>\n          <Avatar src={props.commentData.ImgSrc}></Avatar>\n        </Box>\n        <Box p={1}>\n          <Typography className={classes.inline}>{props.commentData.userName}</Typography><br/>\n          <Typography className={classes.lowText}>{props.commentData.createdDateTime}</Typography>\n          <Link target=\"_blank\" rel=\"noopener noreferrer\" href={props.commentData.commentUrl} color=\"inherit\" className={classes.lowText}>#{props.commentData.id}</Link>\n          <Typography className={classes.comment}>{props.commentData.comment}</Typography>\n        </Box>\n      </Box>\n    </div>\n  );\n  }\n  else\n  return(<div></div>);\n}\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.github.com/repos/akhil-ghatiki/akhil-ghatiki.github.io',\n  responseType: 'json'\n});\n","import React, { useState, useEffect,useRef,useCallback  } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactMarkdown from 'react-markdown'\nimport 'github-markdown-css'\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    markdownText: {\n        paddingLeft: 30,\n        paddingRight: 30,\n        paddingBottom: 30,\n\n    }\n}));\n\nexport default function MarkdownMembrane(props) {\n    const classes = useStyles();\n\n    const useResize = (myRef) => {\n        const getWidth = useCallback(() => myRef.current.offsetWidth, [myRef]);\n\n        const [width, setWidth] = useState(undefined);\n\n        useEffect(() => {\n            const handleResize = () => {\n                setWidth(getWidth());\n            };\n\n            if (myRef.current) {\n                setWidth(getWidth());\n            }\n\n            window.addEventListener('resize', handleResize);\n\n            return () => {\n                window.removeEventListener('resize', handleResize);\n            };\n        }, [myRef, getWidth]);\n\n        return width && width > 50 ? width - 50 : width;\n    };\n\n    const [input, setInput] = useState('');\n    useEffect(() => {\n        fetch(props.markDownFilePath).then((response) => response.text()).then((text) => {\n            setInput(text)\n        })\n    }, [props.markDownFilePath]);\n\n    const divRef = useRef(null);\n    const maxWidth = useResize(divRef);\n\n    const renderers = {\n        image: ({\n            alt,\n            src,\n            title,\n        }) => (\n                <img\n                    alt={alt}\n                    src={src}\n                    title={title}\n                    style={{ maxWidth: maxWidth }} />\n            ),\n    };\n\n    return (\n        <div\n        ref={divRef} className='markdown-body'>\n            <ReactMarkdown\n            source={input}\n            className={classes.markdownText}\n            renderers={renderers}\n            maxWidth={maxWidth}>\n            </ReactMarkdown>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport PrimaryAppBar2 from \"./components/PrimaryAppBar\";\nimport Comments from \"./components/Comments\";\nimport Typography from '@material-ui/core/Typography';\nimport Api from \"./utils/Api\";\nimport MarkdownMembrane from \"./components/MarkdownMembrane\";\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  commentHeader: {\n    margin: 15\n  },\n  link: {\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n        + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n        + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n        + ' \\'Helvetica Neue\\', sans-serif',\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {markDownContent: null, commentsData: []}\n  }\n\n  componentDidMount() {\n    this.updateCommentsState();\n  }\n\n  static getDerivedStateFromProps() {\n\n  }\n\n  updateCommentsState() {\n    // //Api.get('/issues/1/comments')\n    // let commentUrl = null;\n    // if (this.props.contentFilePath.includes(\"Keepwaiting\")) {\n    //   commentUrl = \"https://api.github.com/repos/akhil-ghatiki/akhil-ghatiki.github.io/issues/1/comments\";\n    // } else {\n    //   commentUrl = \"https://api.github.com/repos/akhil-ghatiki/ghpages-blog-comments/issues/1/comments\";\n    // }\n    Api.get(this.getCommentApiUrl())\n    .then((response) => {\n      this.setState({\n        commentsData: response.data.map(\n            comment => this.createCommentData(comment))\n      })\n    });\n  }\n\n  createCommentData(comment) {\n    let commentDetails = {};\n    commentDetails['comment'] = comment.body;\n    commentDetails['ImgSrc'] = comment.user.avatar_url;\n    commentDetails['commentUrl'] = comment.html_url;\n    commentDetails['id'] = comment.id;\n    commentDetails['userName'] = comment.user.login;\n    commentDetails['createdDateTime'] = comment.created_at;\n    return commentDetails;\n  }\n\n  render() {\n    const {classes} = this.props;\n    const gitIssueBaseUrl_keepWaiting = \"https://github.com/akhil-ghatiki/akhil-ghatiki.github.io/issues/\";\n    const gitIssueBaseUrl = \"https://github.com/akhil-ghatiki/ghpages-blog-comments/issues/\";\n    let contentFilePath = this.props.contentFilePath;\n    const gitIssueUrl = this.getGitIssueUrl(contentFilePath,\n        gitIssueBaseUrl_keepWaiting, gitIssueBaseUrl);\n    return (\n        <div className={'App'}>\n          <PrimaryAppBar2></PrimaryAppBar2>\n          <Grid container justify=\"center\" className={classes.root}>\n            <Grid item xs={12} sm={3.5}>\n              <div></div>\n            </Grid>\n            <Grid item xs={12} sm={5}>\n              <div>\n                <MarkdownMembrane markDownFilePath={this.props.contentFilePath}>\n                </MarkdownMembrane>\n              </div>\n              <p className={classes.commentHeader}>Shoot your comments for this\n                post in <span>\n              <a href={gitIssueUrl}\n                 target=\"_blank\"\n                 rel=\"noopener noreferrer\">this link</a></span>. It will\n                show up\n                in the comments below</p>\n              <Typography className={classes.commentHeader}\n                          variant={\"h6\"}>Comments:</Typography>\n              {this.state.commentsData.map(commentDataObject =>\n                  <Comments commentData={commentDataObject}\n                            gitIssue={this.props.gitIssue}></Comments>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={3.5}>\n              <div></div>\n            </Grid>\n          </Grid>\n        </div>\n    );\n  }\n\n  getGitIssueUrl(contentFilePath, gitIssueBaseUrl_keepWaiting,\n      gitIssueBaseUrl) {\n    if (contentFilePath.includes(\"Keepwaiting\")) {\n      return gitIssueBaseUrl_keepWaiting.concat(this.props.gitIssue);\n    } else {\n      return gitIssueBaseUrl.concat(this.props.gitIssue);\n    }\n  }\n\n  getCommentApiUrl() {\n    if (this.props.contentFilePath.includes(\"Keepwaiting\")) {\n      return \"https://api.github.com/repos/akhil-ghatiki/akhil-ghatiki.github.io/issues/\"\n          + this.props.gitIssue + \"/comments\";\n    } else {\n      return \"https://api.github.com/repos/akhil-ghatiki/ghpages-blog-comments/issues/\"\n          + this.props.gitIssue + \"/comments\";\n    }\n  }\n}\n\nexport default withStyles(useStyles)(App);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport homeFilePath from './posts/home/home.md';\nimport PrimaryAppBar2 from \"./components/PrimaryAppBar\";\nimport MarkdownMembrane from \"./components/MarkdownMembrane\";\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  markdownText: {\n    margin: 30\n  },\n  link: {\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n      + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n      + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n      + ' \\'Helvetica Neue\\', sans-serif',\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { markDownContent: null, commentsData: [] }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={'App'}>\n        <PrimaryAppBar2></PrimaryAppBar2>\n        <Grid container justify=\"center\" className={classes.root}>\n          <Grid item xs={12} sm={2}>\n            <div></div>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <div>\n              <MarkdownMembrane markDownFilePath={homeFilePath}>\n              </MarkdownMembrane>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <div></div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(App);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport now from '../posts/app-menu/Now.md'; import categories from '../posts/app-menu/Categories.md';\nimport tags from '../posts/app-menu/Tags.md';\nimport archive from '../posts/archive/Archive.md';\nimport App from '../App';\nimport Home from '../Home';\nimport test1 from '../posts/test1/test1.md';\n \n //[IMPORT_PLACE_HOLDER]\n\nexport const RoutesList = {\n  HOME: '/',\n  NOW: '/now',\n  CATEGORIES: '/categories',\n  TAGS: '/tags',\n  ARCHIVE: '/archive',\nTEST1: '/test1', \n //[ROUTE_PATH_PLACE_HOLDER]\n}\n\nexport default function AppRouter() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact\n          path={RoutesList.HOME}\n          render={() => <Home key=\"home\" />} />\n\n        <Route\n          path={RoutesList.ARCHIVE}\n          render={() => <App key=\"Archive\" contentFilePath={archive}\n            gitIssue={1} />} />\n\n        <Route\n          path={RoutesList.NOW}\n          render={() => <App key=\"Now\" contentFilePath={now}\n            gitIssue={1} />} />\n\n        <Route\n          path={RoutesList.CATEGORIES}\n          render={() => <App key=\"Categories\" contentFilePath={categories}\n            gitIssue={1} />} />\n\n        <Route\n          path={RoutesList.TAGS}\n          render={() => <App key=\"Tags\" contentFilePath={tags}\n            gitIssue={1} />} />\n\n<Route path={RoutesList.TEST1} render={() => <App key=\"test1\" contentFilePath={test1} gitIssue={13} />} /> \n {/*ROUTE_RENDER_PLACE_HOLDER*/}\n\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './router/Routes';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n       <AppRouter></AppRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Now.dff3b3fc.md\";","module.exports = __webpack_public_path__ + \"static/media/Categories.bcfaaa93.md\";","module.exports = __webpack_public_path__ + \"static/media/Tags.9e5cec9a.md\";","module.exports = __webpack_public_path__ + \"static/media/Archive.467d429c.md\";","module.exports = __webpack_public_path__ + \"static/media/home.9b38c8e5.md\";","module.exports = __webpack_public_path__ + \"static/media/test1.c538ff4c.md\";"],"sourceRoot":""}